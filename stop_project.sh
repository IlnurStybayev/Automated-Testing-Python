#!/bin/bash
# stop_project.sh

LOG_FILE="stop_project_log.txt"

# Функция логирования
log() {
    echo "$(date +"%Y-%m-%d %H:%M:%S") - $1" | tee -a "$LOG_FILE"
}

# Включение отладочного вывода для отслеживания команд (раскомментируйте для использования)
# set -x

# Установка строгого режима для немедленного завершения при ошибках
set -euo pipefail

log "Начало остановки проекта..."

log "Остановка локального сервера разработки..."
PIDS=$(ps aux | grep '[m]anage.py runserver' | awk '{print $2}')
if [ -z "$PIDS" ]; then
    log "Сервер разработки не был запущен."
else
    log "PID-ы сервера разработки для остановки: $PIDS"
    echo $PIDS | xargs kill || log "Ошибка при остановке сервера(ов) разработки."
    log "Сервер(ы) разработки остановлен(ы)."
fi

log "Остановка Docker-контейнеров..."
docker-compose down || log "Ошибка при остановке Docker-контейнеров."
log "Docker-контейнеры остановлены."

log "Очистка неиспользуемых Docker ресурсов..."
docker system prune -f --volumes || log "Ошибка при очистке Docker ресурсов."
log "Неиспользуемые Docker ресурсы очищены."

log "Удаление кеша pytest..."
if [ -d ".pytest_cache" ]; then
    rm -rf .pytest_cache || log "Ошибка при удалении кеша pytest."
    log "Кеш pytest удален."
else
    log "Кеш pytest не найден. Удаление пропущено."
fi

log "Удаление кеша __pycache__..."
if find . -type d -name __pycache__; then
    find . -type d -name __pycache__ -exec rm -rf {} + || log "Ошибка при удалении кеша __pycache__."
    log "Кеш __pycache__ удален."
else
    log "Кеш __pycache__ не найден. Удаление пропущено."
fi

log "Деактивация виртуального окружения (если скрипт запущен из активированного виртуального окружения)..."
if [ -n "${VIRTUAL_ENV}" ]; then
    deactivate || true  # Деактивация, игнорируем ошибки если не в виртуальном окружении
    log "Виртуальное окружение деактивировано."
else
    log "Виртуальное окружение не было активировано. Деактивация пропущена."
fi

log "Проект успешно остановлен и очищен."

# Отключение отладочного вывода (раскомментируйте, если использовали set -x)
# set +x
